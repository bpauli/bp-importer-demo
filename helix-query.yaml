version: 1

indices:
  all:
    include:
      - '/**'
    target: /query-index.json
    properties:
      path:
        select: none
        value: |
          replace(path, '/publish/', '/')
      title:
        select: head > meta[property="og:title"]
        value: |
          attribute(el, 'content')
      description:
        select: head > meta[property="og:description"]
        value: |
          attribute(el, 'content')
      category:
        select: head > meta[name="category"]
        value: |
          attribute(el, 'content')
      date:
        select: head > meta[name="date"]
        value: |
          attribute(el, 'content')
      lastModified:
        select: main > div:nth-of-type(3)
        value: |
          parseTimestamp(match(el, '[Oo][Nn] \\d\\d-\\d\\d-\\d\\d\\d\\d'), 'MM-DD-YYYY')
      image:
        select: head > meta[property="og:image"]
        value: |
          match(attribute(el, 'content'), 'https:\/\/[^/]+(\/.*)')
      author:
        select: head > meta[name="author"]
        value: |
          attribute(el, 'content')
  blog:
    include:
      - '/en/blog/**'
    exclude:
      - /en/blog
    target: /en/blog/query-index.json
    properties:
      path:
        select: none
        value: |
          replace(path, '/publish/', '/')
      title:
        select: head > meta[property="og:title"]
        value: |
          attribute(el, 'content')
      description:
        select: head > meta[property="og:description"]
        value: |
          attribute(el, 'content')
      category:
        select: head > meta[name="category"]
        value: |
          attribute(el, 'content')
      date:
        select: head > meta[name="date"]
        value: |
          attribute(el, 'content')
      lastModified:
        select: main > div:nth-of-type(3)
        value: |
          parseTimestamp(match(el, '[Oo][Nn] \\d\\d-\\d\\d-\\d\\d\\d\\d'), 'MM-DD-YYYY')
      image:
        select: head > meta[property="og:image"]
        value: |
          match(attribute(el, 'content'), 'https:\/\/[^/]+(\/.*)')
      author:
        select: head > meta[name="author"]
        value: |
          attribute(el, 'content')

  blogposts:
    include:
      - '/*/blog/**'
    exclude:
      - /*/blog
    target: /api/blogposts.json
    properties:
      path:
        select: none
        value: path
      lang:
        select: none
        value: match(path, '/([a-z]{2})/blog')
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, 'content')
      description:
        select: head > meta[property="og:description"]
        value: attribute(el, 'content')
      category:
        select: head > meta[name="category"]
        value: attribute(el, 'content')
      date:
        select: head > meta[name="date"]
        value: attribute(el, 'content')
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, 'content'), 'https:\/\/[^/]+(\/.*)')
      author:
        select: head > meta[name="author"]
        value: attribute(el, 'content')

  author:
    include:
      - '/content/dam/comwrap/content-fragments/**'
    target: /en/author/query-index.json
    properties:
      path:
        select: none
        value: |
          replace(path, '/publish/', '/')
      title:
        select: head > meta[property="og:title"]
        value: |
          attribute(el, 'content')
      description:
        select: head > meta[property="og:description"]
        value: |
          attribute(el, 'content')
      image:
        select: head > meta[property="og:image"]
        value: |
          match(attribute(el, 'content'), 'https:\/\/[^/]+(\/.*)')
      role:
        select: head > meta[name="role"]
        value: |
          attribute(el, 'content')
  author-api:
    include:
      - '/content/dam/comwrap/content-fragments/**'
    target: /api/authors.json
    properties:
      path:
        select: none
        value: |
          replace(path, '/publish/', '/')
      title:
        select: head > meta[property="og:title"]
        value: |
          attribute(el, 'content')
      description:
        select: head > meta[property="og:description"]
        value: |
          attribute(el, 'content')
      image:
        select: head > meta[property="og:image"]
        value: |
          match(attribute(el, 'content'), 'https:\/\/[^/]+(\/.*)')
      role:
        select: head > meta[name="role"]
        value: |
          attribute(el, 'content')